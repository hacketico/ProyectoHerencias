% Parámetros generales
fs = 10000;         % Frecuencia de muestreo (Hz)
t = 0:1/fs:0.5;     % Tiempo de 0 a 0.5 s

% Señal de mensaje (baja frecuencia)
fm = 50;            % Frecuencia del mensaje (Hz)
m = sin(2*pi*fm*t); % Señal del mensaje

% Señal portadora (alta frecuencia)
fc = 500;                     % Frecuencia de la portadora (Hz)
c = cos(2*pi*fc*t);           % Señal portadora

% Señal modulada (AM de amplitud)
s = (1 + m).*c;

%% Gráficas en dominio del tiempo
figure;
subplot(3,1,1); plot(t, m); title('Señal del mensaje'); xlabel('Tiempo'); ylabel('Amplitud');
subplot(3,1,2); plot(t, c); title('Portadora'); xlabel('Tiempo'); ylabel('Amplitud');
subplot(3,1,3); plot(t, s); title('Señal Modulada (AM)'); xlabel('Tiempo'); ylabel('Amplitud');

%% Análisis en el dominio de la frecuencia (FFT)
n = length(t);
f = linspace(-fs/2, fs/2, n);
S = fftshift(abs(fft(s))/n);

figure;
plot(f, S);
title('Espectro de la Señal AM');
xlabel('Frecuencia (Hz)');
ylabel('Magnitud');

%% Añadir ruido (AWGN)
ruido = 0.3 * randn(1, length(t));
s_ruido = s + ruido;

figure;
plot(t, s_ruido);
title('Señal AM con ruido');
xlabel('Tiempo'); ylabel('Amplitud');

%% Simular atenuación
s_atenuada = 0.5 * s;
figure;
plot(t, s_atenuada);
title('Señal AM Atenuada');
xlabel('Tiempo'); ylabel('Amplitud');

%% Simular distorsión (recorte)
s_distorsion = s;
s_distorsion(s_distorsion > 0.5) = 0.5;
s_distorsion(s_distorsion < -0.5) = -0.5;

figure;
plot(t, s_distorsion);
title('Señal AM con distorsión (recorte)');
xlabel('Tiempo'); ylabel('Amplitud');
